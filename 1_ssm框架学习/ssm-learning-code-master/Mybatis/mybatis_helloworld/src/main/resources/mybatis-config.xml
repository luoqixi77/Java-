<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
    在配置核心配置文件中，添加的标签要符合顺序
    -->
    <!--    properties?,settings?,typeAliases?,typeHandlers?,objectFactory?-->
    <!--    ,objectWrapperFactory?,reflectorFactory?,plugins?,-->
    <!--    environments?,databaseIdProvider?,mappers?-->

    <!--
    引入properties文件，就可以在当前文件中以${key}的方式来访问value
    -->
    <properties resource="jdbc.properties"/>
    <!--
    typeAliases：起别名
    -->
    <typeAliases>
        <!--
        如果不写alias，则默认类名为别名，且不范围内大小写
        -->
        <!--        <typeAlias type="com.darling.pojo.User" alias="abc"/>-->
        <!--        <typeAlias type="com.darling.pojo.User"/>-->
        <!--
        package：通过包来设置别名，此时包下的所有类型都有默认的别名
        -->
        <package name="com.darling.pojo"/>
    </typeAliases>

    <!--    environments：配置连接数据库的环境
            属性：
            default：设置默认的连接数据库环境的id
    -->
    <environments default="development">
        <!--
        environment：设置一个具体的连接数据库的环境
        属性：
        id：设置一个环境的标识，具有唯一性
        -->
        <environment id="development">
            <!--
            transactionManager：设置事务管理器
            属性：
            type：设置事务管理器的方式
            type=“JDBC/MANAGED”
            JDBC：表示使用JDBC原生的事务管理方式
            MANAGED：被管理，例如spring
            -->
            <transactionManager type="JDBC"/>
            <!--
            dateSource：设置数据源
            属性：
            type：设置数据源的类型
            type=“POOLED/UNPOOLED/JNDI”
            POOLED：表示使用数据库连接池
            UNPOOLED：表示不使用数据库连接池
            JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>

        <!--        <mapper resource="mapper/UserMapper.xml"/>-->
        <!--
        以包的形式引入映射文件，但需满足两个条件：
        1，mapper接口和映射文件的路径需一致
        2，mapper接口和映射文件名一致
        -->
        <package name="com.darling.mapper"/>
    </mappers>
</configuration>